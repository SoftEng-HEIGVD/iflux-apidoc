is: [ auth ]
type:
  collection:
    humanName: action target
    schemaBaseName: actionTarget
    exampleGetResponse: !include ../examples/actionTargets/response-array-get.json
    examplePostRequest: !include ../examples/actionTargets/request-post.json
    examplePostError: !include ../examples/actionTargets/response-post-error.json
get:
  securedBy: [ jwt: { type: 'owner' }, test ]
  description: |
    By default, retrieve all the action targets that a user can visualize.

    - If an `actionTargetTemplateId` is provided, then all the action target templates of this action target template are
    retrieved. The user must have the right to access to this action target template, otherwise, he will get a `403`.

    - If an `organizationId` is provided, then all the action targets of the organization are
    retrieved. The user must be a member of the organization, otherwise, he will get a `403`.

    - If `allOrganizations` is used, therfore, all the action targets for all the organizations where the user
    is member are retrived.

    - If `public` is provided then all the action targets that are public are retrieved.

    In the case that multiple parameters are provided, only one will take effect. The evaluation order is the following:
    1. `actionTargetTemplateId`: All action targets that are defined for this action target template;
    2. `organizationId`: All action targets where the user is memober of the specified organization;
    3. `allOrganizations`: All action targets where the user is member of the linked organizations;
    4. `public`: All public action targets;
    5. `no param`: All accessible action targets.
  queryParameters:
    actionTargetTemplateId:
      description: |
        Filter the action targets by action target template.

        The user **MUST** be a member of the organization where the action target is configured.
      type: integer
      required: true
      example: |
        `actionTargetTemplateId=1`
    organizationId:
      description: |
        Filter the action targets by organization.

        The user **MUST** be a member of the organization where the action target is configured.
      type: integer
      required: true
      example: |
        `organizationId=1`
    allOrganizations:
      description: Filter the action targets to retrieve all of them accross all the organizations where the user is member of.
      type: integer
      required: false
      example: |
        `allOrganizations` or `allOrganizations=true`
    public:
      description: Filter the action targets to retrieve all the public ones.
      type: boolean
      required: false
      example: |
        `public` or `public=true`
    name:
      type: string
      required: false
      description: Use this parameter to apply a filter on the name. Can be combined with other parameters.
      example: |
        `name=iFlu%`
  responses:
    200:
      description: List of action targets or empty list `[]`.
    422:
      description: If the `actionTargetTemplateId`, `organizationId` or `allOrganizations` is not provided.
    403:
      description: If the user is not a member of the organization that owns the action target.
post:
  securedBy: [ jwt: { type: 'owner' }, test ]
  responses:
    201:
      headers:
        x-iflux-generated-id:
    403:
      description: If the user is not a member of the organization that owns the action target.
    422:
      description: |
        Validation errors.

        You will receive these validations errors:

        * `{ "organizationId": [ "No organization found." ] }` when:
          * No organization found from the ID given
          * You have no access to the organization

        * `{ "actionTargetTemplateId": [ "No action target template found." ] }` when:
          * No action target template found from the ID given
          * You have no access to the action target template
          * You cannot create an event action target from an action target template in a different organization. In other words
            the organization ID is not the same as action target template organization ID.
    500:
      description: |
        If a configuration is required, an attempt to configure the remote target is done. Therefore, this error is returned in case
        the remote service is not available or an error is returned by the attempt to configure it.
      body:
        example: |
          {
            "message": "Unable to configure the remote action target."
          }

/{id}:
  is: [ auth ]
  type:
    member:
      humanName: action targets
      schemaBaseName: actionTarget
      exampleGetResponse: !include ../examples/actionTargets/response-get.json
      examplePatchRequest: !include ../examples/actionTargets/request-patch.json
      examplePatchError: !include ../examples/actionTargets/response-patch-error.json
  get:
    securedBy: [ jwt: { type: 'owner' }, test ]
    responses:
      403:
        description: If the user is not a member of the organization that owns the action target.
  patch:
    securedBy: [ jwt: { type: 'owner' }, test ]
    responses:
      201:
        headers:
          x-iflux-generated-id:
      403:
        description: If the user is not a member of the organization that owns the action target.
      500:
        description: |
          If a configuration is required, an attempt to configure the remote target is done. Therefore, this error is returned in case
          the remote service is not available or an error is returned by the attempt to configure it.

          **Remark**: At the moment, the action target is updated and there is no way to reconfigure the remote service.
        body:
          example: |
            {
              "message": "Unable to configure the remote action target."
            }
  delete:
    securedBy: [ jwt: { type: 'owner' }, test ]

  /configure:
    is: [ auth ]
    post:
      securedBy: [ jwt: { type: 'owner' }, test ]
      description: |
        Reconfigure the remote action target
      responses:
        200:
          description: Configured done sucessfully.
        404:
          description: The action target has no configuration.
        500:
          description: Remote action target returned an error during configuration.